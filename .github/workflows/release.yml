---
name: Release
on:
  workflow_run:
    workflows: ['Node.js CI']
    branches: [main]
    types:
      - completed

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903
        with:
          node-version-file: '.tool-versions'

      - name: Install pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061
        with:
          run_install: true

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Install Chrome dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Generate screenshots
        run: |
          # Set display for headless browser
          export DISPLAY=:99
          # Start virtual display
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          # Wait for display to start
          sleep 2
          # Generate screenshots
          pnpm screenshots

      - name: Version before release
        id: version-before
        run: echo "version=$(jq -r .version amo.json)" >> ${GITHUB_OUTPUT}

      - name: Release
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm semantic-release

      - name: Version after release
        id: version-after
        run: echo "version=$(jq -r .version amo.json)" >> ${GITHUB_OUTPUT}

      - name: Sign and submit to AMO
        if:
          ${{steps.version-before.outputs.version !=
          steps.version-after.outputs.version}}
        run: |
          echo "Signing and submitting v${{steps.version-after.outputs.version}} to AMO [was v${{steps.version-before.outputs.version}}]"
          pnpm web-ext sign
        env:
          WEB_EXT_API_KEY: ${{ secrets.AMO_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.AMO_API_SECRET }}
